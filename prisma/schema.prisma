// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  email           String            @unique
  name            String
  role            String
  password        String
  contactNo       String
  address         String
  profileImg      String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  reviewAndRating ReviewAndRating[]
  Order           Order[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  book      Book[]
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  publicationDate String
  categoryId      String
  category        Category          @relation(fields: [categoryId], references: [id])
  reviewAndRating ReviewAndRating[]
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  bookId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Define relationships to the User and Book models
  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  // Define a unique constraint to ensure each user can only review a book once
  @@unique([userId, bookId])
}

model Order {
  id           String              @id @default(uuid())
  userId       String
  orderedBooks Json?
  status       OrderSummaryStatus? @default(pending) // Default to 'pending'
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  user         User                @relation(fields: [userId], references: [id])
}

enum OrderSummaryStatus {
  pending
  shipped
}
